import com.adarshr.gradle.testlogger.theme.ThemeType

plugins {
    id "org.springframework.boot" version "2.3.1.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.72"
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.72"
    id "com.adarshr.test-logger" version "2.0.0"
    id "org.sonarqube" version "2.8"
    id 'jacoco'
    id 'java'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.3.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.3.1.RELEASE'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.1.RELEASE'
}

group = 'com.karthik.contacts'
version = '1.0.0-SNAPSHOT'
description = 'contacts-app'
sourceCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

testlogger {
    theme = ThemeType.MOCHA
    slowThreshold = 4000
    showSummary = true
    showSimpleNames = true
    showStandardStreams = false
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "chejerlakarthik-github"
        property "sonar.projectName", "contacts-app"
        property "sonar.projectKey", "chejerlakarthik_contacts-app"
    }
}

jacocoTestReport {
    // Forcing the execution of 'test' before the execution of 'jacocoTestReport'
    dependsOn test
    reports {
        xml.enabled true
    }
}
